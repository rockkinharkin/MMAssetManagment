!function(c){window.llms=window.llms||{},window.llms.metabox_product=function(){this.temp_id=Math.floor(7777*Math.random()+777),this.init=function(){this.bind_visibility();var e=c("#lifterlms-product #llms-product-options-access-plans");if(e.length){LLMS.Spinner.start(e);var l,t=this,a=0;l=setInterval(function(){if(300<=a)e.html(LLMS.l10n.translate("There was an error loading the necessary resources. Please try again."));else{if("undefined"==typeof tinyMCE)return void a++;t.bind()}clearInterval(l),LLMS.Spinner.stop(e)},100)}},this.bind=function(){var t=this;c("#llms-save-access-plans").on("click",function(){c("#publish").trigger("click")}),c("#llms-access-plans").on("change","[data-controller-id]",function(){t.controller_change(c(this))}),c("#llms-access-plans .llms-access-plan-datepicker").datepicker({dateFormat:"mm/dd/yy"}),c("#llms-access-plans [data-controller-id]").trigger("change"),c("#llms-new-access-plan").on("click",function(){var e=c(this);t.init_plan(),e.attr("disabled","disabled"),setTimeout(function(){e.removeAttr("disabled")},500)}),c("#llms-access-plans").sortable({handle:".llms-drag-handle",items:".llms-access-plan",start:function(e,l){c("#llms-access-plans").addClass("dragging")},stop:function(e,l){c("#llms-access-plans").removeClass("dragging"),t.update_plan_orders()}}),c("#llms-access-plans").on("keyup","input.llms-plan-title",function(){var e=c(this),l=e.closest(".llms-access-plan").find("span.llms-plan-title"),t=e.val(),a=t||l.attr("data-default");l.text(a)}),c("#llms-access-plans").on("click",".llms-plan-delete",function(e){e.stopPropagation(),t.delete_plan(c(this))}),window.llms.metaboxes.post_select(c("#llms-access-plans .llms-availability-restrictions")),c("#_llms_plans_content_llms-new-access-plan-model").attr("disabled","disabled"),tinyMCE.EditorManager.execCommand("mceRemoveEditor",!0,"_llms_plans_content_llms-new-access-plan-model"),c("#publish").on("click",function(e){c("#llms-access-plans input").each(function(){if(c(this).is(":invalid")){var e=c(this).closest(".llms-access-plan");return e.hasClass("opened")||e.find(".llms-collapsible-header").trigger("click"),!1}})})},this.bind_visibility=function(){var l=c("#llms-catalog-visibility-select"),t=c("a.llms-edit-catalog-visibility"),e=c("a.llms-save-catalog-visibility"),a=c("a.llms-cancel-catalog-visibility");t.on("click",function(e){e.preventDefault(),l.slideDown("fast"),t.hide()}),e.on("click",function(e){e.preventDefault(),l.slideUp("fast"),t.show(),c("#llms-catalog-visibility-display").text(c('input[name="_llms_visibility"]:checked').attr("data-label"))}),a.on("click",function(e){e.preventDefault(),l.slideUp("fast"),t.show()})},this.delete_plan=function(e){var l=this,t=e.closest(".llms-access-plan"),a=t.attr("data-id");a?c("#llms-delete-plan-modal").topModal({open:function(){c("#llms-confirm-delete-plan").on("click",function(){LLMS.Spinner.start(t,"small"),c("#llms-delete-plan-modal .topModalClose").trigger("click"),window.LLMS.Ajax.call({data:{action:"delete_access_plan",plan_id:a},success:function(e){LLMS.Spinner.stop(t),e.success?l.remove_plan_el(t):e.message&&alert(e.message)}})})},closed:function(){c("#llms-delete-plan-modal").attr("data-plan-id",""),c("#llms-confirm-delete-plan").off("click")}}).attr("data-plan-id",a):l.remove_plan_el(t)},this.controller_change=function(e){var l=e.attr("data-controller-id"),i=e.val(),t=e.closest(".llms-access-plan").find('[data-controller="'+l+'"]');"checkbox"===e.attr("type")&&(i=e.is(":checked")?i:"no"),t.each(function(){var e,l,t=c(this),a="SELECT"===t[0].nodeName||"INPUT"===t[0].nodeName||"TEXTAREA"===t[0].nodeName?t:t.find("input, select, textarea"),s=t.attr("data-value-is"),n=t.attr("data-value-is-not");switch(void 0!==s&&!1!==s?l="==":void 0!==n&&!1!==n&&(l="!="),l){case"==":e=i==s?"show":"hide";break;case"!=":e=i!=n?"show":"hide"}"show"===e?(t.show(),a.removeAttr("disabled").trigger("change")):"hide"===e&&(t.hide(),a.attr("disabled","disabled"))})},this.has_plan_limit_been_reached=function(){return window.llms.product.access_plan_limit<=c("#llms-access-plans .llms-access-plan").length},this.init_plan=function(){if(!this.has_plan_limit_been_reached()){var e=c("#llms-new-access-plan-model").clone();$existing_plans=c("#llms-access-plans .llms-access-plan"),$editor=e.find("#_llms_plans_content_llms-new-access-plan-model"),e.removeAttr("id"),$editor.removeAttr("id").attr("id","_llms_plans_content_"+this.temp_id),this.temp_id++,e.find("select, input, textarea").each(function(){c(this).removeAttr("disabled")}),e.find(".llms-access-plan-datepicker").datepicker({dateFormat:"mm/dd/yy"}),e.appendTo("#llms-access-plans"),this.update_plan_orders(),e.find(".llms-collapsible-header").trigger("click"),this.has_plan_limit_been_reached()&&this.toggle_create_button("disable"),window.llms.metaboxes.post_select(e.find(".llms-availability-restrictions")),e.find("[data-controller-id]").trigger("change")}},this.toggle_create_button=function(e){var l=c("#llms-new-access-plan"),t=l.next("p");"disable"===e?(l.attr("disabled","disabled"),t.show()):(l.removeAttr("disabled"),t.hide())},this.remove_plan_el=function(e){var l=this;e.fadeOut(400),setTimeout(function(){e.remove(),l.has_plan_limit_been_reached()||l.toggle_create_button("enable")},450)},this.update_plan_orders=function(){c("#llms-access-plans .llms-access-plan").each(function(){var e=c(this),l=e.find(".plan-order"),t=e.find('textarea[id^="_llms_plans_content_"]').attr("id"),a=1*l.val(),s=e.index();tinyMCE.EditorManager.execCommand("mceRemoveEditor",!0,t),e.find("select, input, textarea").each(function(){var e=c(this).attr("name");e&&c(this).attr("name",e.replace(a,s))}),tinyMCE.EditorManager.execCommand("mceAddEditor",!0,t),l.val(s)})},this.init()};new window.llms.metabox_product}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
